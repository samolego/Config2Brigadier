plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

configurations {
    shadowCommon
    compileClasspath.extendsFrom shadowCommon
    runtimeClasspath.extendsFrom shadowCommon

}

architectury {
    platformSetupLoomIde()
    fabric()
}


repositories {
    maven { url = "https://maven.nucleoid.xyz/" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    developmentFabric(project(path: ":common", configuration: "dev")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archiveFile)
    archiveClassifier = null
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archivesBaseName + "-fabric"
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
